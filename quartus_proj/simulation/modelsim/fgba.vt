// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "11/23/2018 18:01:14"
                                                                                
// Verilog Test Bench template for design : fgba
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module fgba_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk_50mhz;
reg rstn;
// wires                                               
wire [7:0]  B;
wire [7:0]  G;
wire HS;
wire [7:0]  R;
wire VS;
wire vga_black_n;
wire vga_clk;
wire vga_sync_n;

// assign statements (if any)                          
fgba i1 (
// port map - connection between master ports and signals/registers   
	.B(B),
	.G(G),
	.HS(HS),
	.R(R),
	.VS(VS),
	.clk_50mhz(clk_50mhz),
	.rstn(rstn),
	.vga_black_n(vga_black_n),
	.vga_clk(vga_clk),
	.vga_sync_n(vga_sync_n)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
clk_50mhz = 1'b1;                                                       
// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
#15 clk_50mhz = ~clk_50mhz;                                              
// --> end                                             
end                                                    
endmodule

